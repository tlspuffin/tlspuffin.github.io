"use strict";(self.webpackChunktlspuffin_website=self.webpackChunktlspuffin_website||[]).push([[1814],{7906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=n(4848),s=n(8453);const r={title:"Building OpenSSL"},l=void 0,d={id:"guides/getting-started/building-openssl",title:"Building OpenSSL",description:"Building Preconfigured Targets",source:"@site/docs/guides/getting-started/building-openssl.md",sourceDirName:"guides/getting-started",slug:"/guides/getting-started/building-openssl",permalink:"/docs/guides/getting-started/building-openssl",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Building OpenSSL"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/guides/getting-started/installation"},next:{title:"Fuzzing OpenSSL",permalink:"/docs/guides/getting-started/fuzzing-openssl"}},a={},o=[{value:"Building Preconfigured Targets",id:"building-preconfigured-targets",level:2},{value:"Checking The Build Result",id:"checking-the-build-result",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"building-preconfigured-targets",children:"Building Preconfigured Targets"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"tlspuffin"})," comes with several preconfigured fuzz targets and a wrapper script ",(0,i.jsx)(t.em,{children:"mk_vendor"})," to simplify the build process:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"./tools/mk_vendor make openssl:openssl312 --options=sancov,asan --name=openssl312-asan\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This command will fetch the sources for OpenSSL 3.1.2 and build it with Clang's ",(0,i.jsx)(t.a,{href:"https://clang.llvm.org/docs/SanitizerCoverage.html",children:"SanitizerCoverage"})," and ",(0,i.jsx)(t.a,{href:"https://clang.llvm.org/docs/AddressSanitizer.html",children:"AddressSanitizer"})," activated."]}),"\n",(0,i.jsx)(t.admonition,{title:"Want to try another target?",type:"tip",children:(0,i.jsxs)(t.p,{children:["For the complete list of preconfigured targets, you can look at our ",(0,i.jsx)(t.a,{href:"../../references/support-matrix",children:"support matrix"}),"."]})}),"\n",(0,i.jsx)(t.h2,{id:"checking-the-build-result",children:"Checking The Build Result"}),"\n",(0,i.jsxs)(t.p,{children:["By default, ",(0,i.jsx)(t.em,{children:"mk_vendor"})," will store the result of the build process in a subfolder of the ",(0,i.jsx)(t.code,{children:"vendor/"})," folder at the project's root. In our case:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"ls -al ./vendor/openssl312-asan\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This folder is a standard install prefix containing, most notably, the ",(0,i.jsx)(t.code,{children:"include"})," and ",(0,i.jsx)(t.code,{children:"lib"})," folders that will allow ",(0,i.jsx)(t.em,{children:"tlspuffin"})," to link against the fuzz target."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);